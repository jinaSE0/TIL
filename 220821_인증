인증은 2단계 절차를 거침

1. 접근허가받기
2. 보호된 리소스에 요청하기

사용자가 로그인을 해서 접근허가를 받음
-> 로그인시 데이터가 서버로 전송, 서버에서 DB살펴 사용자의 id, pw 조합 확인
-> 유효성이 검증되면 요청을 받은 백엔드 서버가 접근을 허가함
-> 접근을 허가받으면 사이트의 특정 페이지에 접근할 수 있고
   필요에 따라서는 접근 허가를 활용해 API 엔드포인트의 다른 보호된 리소스에 요청을 보낼 수 있음
   
서버에서 클라이언트에 요청할때 y/n 만으로는 충분하지않음(보안위험)
흔히 많이 쓰는 방법은 
1. 서버사이드세션
->특정 사용자의 고유 id를 서버에 저장하고 서버가 특정사용자의 고유 id를 생성함
->클라이언트에도 전달됨
->서버에 저장이 되어있기때문에 fake id로 액세스 요청하기어려움
->하지만 백엔드와 프론트엔드가 긴밀하게 연결되어있지 않다면 문제

그래서 토큰 활용하는 방식을 많이 쓴다.
2. 토큰활용
로그인 요청을 받으면 서버가 토큰을 생성해서 클라이언트에게 주고
->클라이언트는 요청할때 토큰과 함께 전달한다.
->서버만 토큰은 해싱하는 방법을 알고있기때문에 안전하고 
->서버에 저장하지 않아서 백과 프론트가 긴밀한 연결이 되어있지 않아도 괜찮다.

"인증 토큰"을 작업할 때, 이러한 토큰은 일반적으로 "JSON 웹 토큰" 형식(JWT)으로 생성됩니다.
"토큰"은 실제로 데이터를 문자열로 인코딩하는 알고리즘에 의해 구성된 긴 문자열입니다(프라이빗 키의 도움으로 서버에서만 알 수 있음).
JS https://jwt.io/

