혼자 공부하는 자바스크립트 참조

1. 클래스란?
1-1. 클래스를 이해하기위한 배경지식
객체 : 이름과 값으로 구성된 프로퍼티의 정렬되지않은 집합
객체 지향 프로그래밍 : 객체를 정의하고 그러한 객체를 활용해서 프로그램을 만드는 것

1-2. 클래스 문법은 왜 필요할까
객체를 더 효율적으로 사용하고 싶어 -> 클래스 문법의 탄생

1-3. 클래스의 형태
class 클래스 이름{ }

-> 클래스를 기반으로 만든 객체를 인스턴스라 함 (그냥 객체라고 부르는 경우도 많음)

인스턴스의 형태
new 클래스 이름( )

쉽게 말하면 클래스는 객체를 만드는 함수와 비슷한거고, 인스턴스는 그 함수로 만든 객체
(클래스는 붕어빵 틀, 인스턴스는 그 틀로 만든 붕어빵)

1-4. 생성자
: 클래스를 기반으로 인스턴스를 생성할 때 처음 호출되는 메소드. 따라서 생성자에서는 속성을 추가하는 등 객체를 초기화 처리함
class 클래스 이름{
constructor(){
/생성자 코드/
}

1-5. 핵심 정리
객체지향패러다임 - 객체를 우선적으로 생각해서 프로그램을 만든다는 방법론
추상화 - 프로그램에서 필요한 요소만을 사용해서 객체를 표현하는 법
클래스 - 객체를 안전하고 효율적으로 만들 수 있게 해주는 문법
인스턴스 - 클래스를 기반으로 생성한 객체
생성자 - 클래스를 기반으로 인스턴스를 생성할 때 처음 호출되는 매서드
클래스 이름은 대문자로 쓰는 것이 좋다.

2. 클래스 상속이란?

2-1. 상속은 왜 필요할까?
클래스를 활용할 때 클래스를 분리하는 것이 편리하지만 클래스 선언 부분이 중복이 발생하는 등 복잡해지게 됨 -> 그래서 상속을 활용


2-2. 상속
: 클래스의 선언 코드를 중복해서 작성하지 않도록 함으로써 코드의 생산 효율을 올리는 문법

어떤 클래스가 가지고 있는 유산(속성과 매서드)를 다른 클래스에 물려주는 형태로 사용. 이때 유산을 주는 클래스를 부모클래스 유산을 받는 클래스를 자식 클래스라고 부름.

2-3. 형태
class 클래스 이름 extends 부모 클래스 이름{
} 

super() : 부모의 생성자 함수를 호출하는 함수
