액시오스
http를 이용해서 서버와 통신하기 위해 사용하는 패키지

1. GET
Axios get
`get`은 서버의 데이터를 **조회할 때 사용**합니다.  
// url에는 서버의 url이 들어가고, config에는 기타 여러가지 설정을 추가할 수 있습니다.
// config는 axios 공식문서에서 확인하세요.

axios.get(url[, config]) // GET

우리가 Axios를 사용해서 GET 요청 코드를 작성하기에 앞서,
어떤 방식으로 요청 해야할지는 우리가 사용하는 json-server의 방식을 알아봐야함.
다시 말해, Axios는 `GET` 요청을 할 수 있도록 도와주는 패키지일뿐이지, 
“어떻게 요청을 해야하지?” 와 같은 방식에 대한 확인은 우리가 사용할 API 명세서를 보아야 한다는 뜻** 입니다.
예를 들어 `GET` 요청을 할 때 **path variable**로 해야할지, **query**로 보내야할지는 API를 만든 사람이 하라는대로 해야 하기 때문

json-serve의 공식문서를 보면, 전체 정보나 상세 정보는 아래와 같이 `path variable` 로 url을 작성하면 되네요.
![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/40edb38f-e46b-4ae6-8092-942b5b69ae2b/Untitled.png)
그리고 filter와 같은 기능을 위해서 `GET` 요청을 하고자할 때는 `query`로 보내라고 명시하고 있습니다.


---------------
코드에 적용
// src/App.js

import React, { useEffect, useState } from "react";
import axios from "axios"; // axios import 합니다.

const App = () => {
  const [todos, setTodos] = useState(null);

	// axios를 통해서 get 요청을 하는 함수를 생성합니다.
	// 비동기처리를 해야하므로 async/await 구문을 통해서 처리합니다.
  const fetchTodos = async () => {
    const { data } = await axios.get("http://localhost:3001/todos");
    setTodos(data); // 서버로부터 fetching한 데이터를 useState의 state로 set 합니다.
  };
	
	// 생성한 함수를 컴포넌트가 mount 됐을 떄 실행하기 위해 useEffect를 사용합니다.
  useEffect(() => {
		// effect 구문에 생성한 함수를 넣어 실행합니다.
    fetchTodos();
  }, []);

	// data fetching이 정상적으로 되었는지 콘솔을 통해 확인합니다.
  console.log(todos); // App.js:16
  return <div>App</div>;
};

export default App;
